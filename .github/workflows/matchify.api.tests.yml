name: Macthify API Tests
on:
 push:
   branches: [ main ]
 pull_request:
   branches: [ main ]

jobs:
 test:
   runs-on: ubuntu-latest
   
   steps:
   - uses: actions/checkout@v3
   
   - name: Setup Node.js
     uses: actions/setup-node@v3
     with:
       node-version: '18'

   - name: Install Dependencies
     run: |
       npm install
       npm install -g newman
       npm install -g newman-reporter-htmlextra
       npm install -g allure-commandline
       
   - name: Start API Server
     run: |
       npm run build
       npm start &
       sleep 10

   - name: Set up Environment Variables
     env:
       POSTMAN_API_URL: ${{ secrets.POSTMAN_API_URL }}
       TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
       TEST_PASSCODE: ${{ secrets.TEST_PASSCODE }}

   - name: Create Results Directory
     run: |
       mkdir -p test-results/allure-results
       
   - name: Run Profile Creation Tests
     run: |
       newman run ./postman/Profile_Tests.json \
       -e ./postman/environment.json \
       --folder "Profile Creation Tests" \
       --reporters cli,htmlextra,allure \
       --reporter-allure-export test-results/allure-results \
       --reporter-htmlextra-export test-results/profile-report.html \
       --export-environment ./postman/updated-env.json
       
   - name: Run Login Tests  
     run: |
       newman run ./postman/Profile_Tests.json \
       -e ./postman/updated-env.json \
       --folder "Login Tests" \
       --reporters cli,htmlextra,allure \
       --reporter-allure-export test-results/allure-results \
       --reporter-htmlextra-export test-results/login-report.html

   - name: Generate Allure Report
     if: always()
     run: |
       allure generate test-results/allure-results --clean -o test-results/allure-report

   - name: Upload Test Results
     if: always()
     uses: actions/upload-artifact@v3
     with:
       name: test-reports
       path: |
         test-results/*
         test-results/allure-report/*

   - name: Check Test Results
     run: |
       if [ $? -ne 0 ]; then
         echo "Tests failed!"
         exit 1
       fi

   - name: Stop API Server
     if: always()
     run: pkill node

   - name: Deploy Reports to GitHub Pages
     if: always()
     uses: peaceiris/actions-gh-pages@v3
     with:
       github_token: ${{ secrets.GITHUB_TOKEN }}
       publish_dir: ./test-results/allure-report

   - name: Notify on Failure
     if: failure()
     uses: actions/github-script@v6
     with:
       script: |
         github.rest.issues.create({
           owner: context.repo.owner,
           repo: context.repo.repo,
           title: 'API Tests Failed',
           body: 'API tests failed in workflow. Check the action logs for details.'
         })
